#!/bin/sh

#
# This script runs a shell inside chroot as a 'build' user.  If any arguments
# supplied, those are the command to be run, otherwise the interactive shell
# will be invoked.
#

CHROOT_PATH=@@CHROOT_PATH@@
HTTP_PROXY=@@HTTP_PROXY@@
FTP_PROXY=@@FTP_PROXY@@

# Quote argument for shell.
# Usage example: eval "$var_name=\"$(quote_shell "$var_value")\""
quote_shell() {
	local out="$*"
	if [ -z "${out##*[\"\$\`\\\\]*}" ]; then
		out="$(printf %s "$out" |sed -e 's/["$`\\]/\\&/g')" ||
			return 1
	fi
	printf %s "$out"
    #` # Hey, Emacs, your syntax highlighter is wrooong!
}

quote_args() {
    for i in "$@"; do
        echo -n \"$(quote_shell "$i")\"
        echo -n " "
    done
    echo
}

if [ "$#" -eq 0 ]; then
    # Interactive shell
    SU_CMD=-i
else
    # Single command. Double quoting to pass through two su(1) invocations. Blergh.
    S=$(quote_args "$@")
    QS=$(quote_args "$S")
    SU_CMD="-c $QS"
fi

if [ -n "$HTTP_PROXY" ]; then
    ENV_EXPORT="http_proxy=$HTTP_PROXY; export http_proxy;"
fi
if [ -n "$FTP_PROXY" ]; then
    ENV_EXPORT="$ENV_EXPORT ftp_proxy=$FTP_PROXY; export ftp_proxy;"
fi

if [ -f /proc/cpuinfo ]; then
    NCPUS=$(grep -c '^processor ' /proc/cpuinfo)
    ENV_EXPORT="$ENV_EXPORT DEB_BUILD_OPTIONS=parallel=$NCPUS"
fi

exec sudo chroot "$CHROOT_PATH" su -l -c "$ENV_EXPORT exec \$SHELL $SU_CMD" build
